@{
  Layout = "_Layout";
}

@model Library.Models.Book

<h2>Book Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Title): @Html.DisplayFor(model => model.Title)<h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>This book does not have an authors associated with it.</p>
}
else
{
  <h4>Author(s):</h4>
  <ul>

  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Author.Name</li>
    @if(User.Identity.IsAuthenticated)
    {
      @if(User.IsInRole("Librarian"))
      {
        @using (Html.BeginForm("DeleteAuthor", "Books"))
        {
          @Html.Hidden("joinId", @join.AuthorBookId)
          <input type="submit" value="Delete"/>
        }
      }
    }
  }
  </ul>
}

@if(User.Identity.IsAuthenticated) 
{
  <p>@Html.ActionLink("Checkout Book", "CheckoutBook", new { id = Model.BookId})</p>
  
  @if(User.IsInRole("Librarian"))
  {
    <p>@Html.ActionLink("Add an Author", "AddAuthor", new { id = Model.BookId })</p>
    <p>@Html.ActionLink("Edit Book", "Edit", new { id = Model.BookId })</p>
    <p>@Html.ActionLink("Delete Item", "Delete", new { id = Model.BookId })</p>
  }
}

@if(User.Identity.IsAuthenticated)
    {
      @if(User.IsInRole("Librarian"))
      {
        <p>@Html.ActionLink("Add a Author", "AddAuthor", new { id = Model.BookId })</p>
        <p>@Html.ActionLink("Edit Book", "Edit", new { id = Model.BookId })</p>
        <p>@Html.ActionLink("Delete Book", "Delete", new { id = Model.BookId })</p>
      }
    }
